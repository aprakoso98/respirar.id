.pointer {
	cursor: pointer;
}
.title {
  color: $blue !important;
  font-size: $base * 2 !important;
  font-family: Display-Medium !important;
  margin-bottom: $secondary;    
  @media only screen and (min-width: 720px) {
    margin-bottom: $base;
  }
}
.shadow {
  box-shadow: 1px 1px $secondary lighten($greyHard, 20);
}
.b-1 {
  border: 1px solid $dark;
}
.brd-1 {
  border-radius: $secondary;
}
[component-id] {
  @include append-attr('button') {
    background: $light;
    // padding: $secondary $base;
    &.link {
      padding: 0;
      background: transparent;
      justify-content: flex-start;
    }
  }
  @include append-attr('icon') {
    &.li-item {
      margin: {
        right: $secondary;
        top: $space;
      }
      font-size: $space !important;
      display: flex;
      align-self: flex-start;
    }
  }
  @include append-attr('input') {
    transition: $transition;
    // padding: $secondary;
    overflow: hidden;
    border: 1px solid $greyHard;
    border-radius: $space;
    &.no-border {
      border: none;
    }
    input {
      transition: $transition;
      outline: none;
    }
  }
}
.o-h {
  overflow: hidden;
}
.animated {
  transition: $transition;
}
.selection {
  -webkit-user-select: all !important;
  -ms-user-select: all !important;
  user-select: all !important;
}
.no {
  &-margin {
    margin: {
      top: 0 !important;
      left: 0 !important;
      bottom: 0 !important;
      right: 0 !important;
    }
  }
  &-padding {
    padding: {
      top: 0 !important;
      left: 0 !important;
      bottom: 0 !important;
      right: 0 !important;
    }
  }
}
.rec-slider-container {
  margin: 0 !important;
}
@each $list in $colorList {
  $class: nth($list, 1);
  $color: nth($list, 2);
  .background-#{$class}, .bg-#{$class} {
    background: $color !important;
  }
  .color-#{$class}, .c-#{$class} {
    color: $color !important;
  }
}

@each $font in $fontList {
  $family: split-str($font, "-");
  $family: nth($family, 2);
  $family: split-str($family, ".");
  $family: nth($family, 1);
  // $family: str-replace($family, 'SemiBold', 'SemiBold');
  @font-face {
    font-family: #{$family};
    src: url('../fonts/#{$font}') format('truetype');
  }
  .#{$family} {
    font-family: #{$family};
  }
  .\!#{$family} {
    font-family: #{$family} !important;
  }
}

@mixin myMixin ($w, $s){
  $o: 0;
  @for $i from 0 to 30 {
    $o: if($i==0, 0, if($w > 0, $o + 5, $o - 5));
    .#{$s}f-#{$i} {
      font-size: #{$i + $fontSize} !important;
    }
    @each $var in (('m', margin), ('p', padding)) {
      $selector: nth($var, 1);
      $style: nth($var, 2);
      .#{$s}#{$selector} {
        &-#{$i} {
          #{$style}: #{$o}px;
        }
        &h-#{$i} {
          #{$style}: {
            left: #{$o}px;
            right: #{$o}px;
          }
        }
        &v-#{$i} {
          #{$style}: {
            top: #{$o}px;
            bottom: #{$o}px;
          }
        }
        @each $position in (('t', top), ('r', right), ('b', bottom), ('l', left)) {
          $selectorP: nth($position, 1);
          $styleP: nth($position, 2);
          &#{$selectorP}-#{$i} {
            #{$style}: {
              #{$styleP}: #{$o}px;
            }
          }
        }
      }
    }
    @each $position in (('t', top), ('r', right), ('b', bottom), ('l', left)) {
      $selectorP: nth($position, 1);
      $styleP: nth($position, 2);
      .#{$s}#{$selectorP}-#{$i} {
        #{$styleP}: #{$o}px;
      }
    }
  }
}

@include myMixin(1, "");
@include myMixin(-1, "-");